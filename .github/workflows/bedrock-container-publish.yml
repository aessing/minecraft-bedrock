name: Bedrock Container Publish

on:
  push:
    tags:
      - v*

env:
  IMAGE_NAME: minecraft-bedrock

jobs:
  publish-github:
    name: Build and push to GitHub Packages
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          # Build Image ID and make it lowercase
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix and "v" from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Push image to GitHub Packages
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:latest

  publish-docker:
    name: Build and push to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --tag ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_ACCESSTOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push image
        run: |
          # Build Image ID and make it lowercase
          IMAGE_ID=${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix and "v" from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Push image to GitHub Packages
          docker tag ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          docker tag ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
